name: Build and Push

on:
  pull_request:
    types:
      - opened
    branches:
      - 'release/**'
  push:
    branches:
      - staging
    tags:
      - 'v*.*.*'

permissions:
  id-token: write
  contents: read


jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latesta
    env:
      REPOSITORY: app-services
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::849514089141:role/github-oidc
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: Test AWS Creds
        run: aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set Registry ENV
        run: echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
      - name: Build Image TAG
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile .
      - name: Test AWS Creds
        run: docker images ls
      - name: Push Image Github Tag to Amazon ECR
        run: |
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Build RELEASE TAG
        if: startsWith(github.event.ref, 'refs/tags/v')
        env:
          RELEASE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$RELEASE_TAG -f Dockerfile .
      - name: Push Image Github Tag to Amazon ECR
        if: startsWith(github.event.ref, 'refs/tags/v')
        env:
          RELEASE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker push $REGISTRY/$REPOSITORY:$RELEASE_TAG

